PENDING REFACTOR:

figure out how to not make call to firebase
  - only listen for new changes
  - every time we open a convo query the messages collection for all messages where id != any of the ids we already have
  - the listener will listen for everytthing else

change all == to ===

COLORS: #E65858 - red, "#4285F4" - blue


NEXT TITLE: I made an app to IMPROVE YOUR MENTAL HEALTH THROUGH conversation __IMPORTANT__

NEXT STEP: notifications ->  encryption | asthetics, add in alert messages to errors

https://virgilsecurity.com/blog/e3kit-for-firebase

reporting - lets do one report create a document in a reports collection - that number goes up with every click to report button
next have a cloud function that disables that users account if the report count gets past a certain number - 20?
for now lets not do time based reporting - if u get reported over 20 times your blacklisted

SET LIMITS FOR NUMBER OF CONVERSATIONS YOU CANN HAVE ASSIGNED TO YOU, LIMIT CONVERSATIONS TO 500 messages, limit convos to 10 at a time, 
make sure to limit gets as much as possible look through the code
minimize errors in firestore functions - this will probably slow stuff down if there are errors

BATCH READ convo messages - only read like 20 at a time unlesss they scroll up or something

CHANGE NAME OF USERS AND COLLECTIONS IN PRODUCTION TO 77447_chaitheapp_users and 77447_chaitheapp_conversations
that way people don't know how to query, also keep all your code private

ADD TRANSACTIONS TO CLOUD FUNCTIONS

in notifications: store user id and token id ?

https://github.com/zo0r/react-native-push-notification

use lottie for the chai animation
limit titles/questions to 200 characters

cloud function for notifications - convo on create, convo on message update, convo on pending create - notify a random user

can see which conversations were written by the same person - fine then we can encrypt all the text stored in the database

https://www.npmjs.com/package/hybrid-crypto-js#documentation

    **MAKE EVERYTHING FASTER WITH ASYNC CALSS

    MAKE ALL FIREBASE CALLS ASYNCHRONOUS
    eventually - users have ratings, when selecting a user from user collection sort by rating and users have notified section false
    if deciding against this, delete the rarting field?

Messages should be created with timestamp - then send them - this way it can be loaded faster as well and timestamp is accurate
remove npm modules we don't use anymore (there's a few)